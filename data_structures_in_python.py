# -*- coding: utf-8 -*-
"""Data_Structures_in_python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gZ7646UMHXhP-aTKDJPtkPy2yAeYKndx

# **Data Structures in python**

---

## *`Topic : List Exercise`*
"""

#Q1. Create a list of 5 random numbers and print the list.

import random

# Creating a list of 5 random numbers
random_list = [random.randint(1, 100) for i in range(5)]
print("Original list:", random_list)

#Q2. Insert 3 new values to the list and print the updated list.

# Inserting 3 new values to the list
random_list.extend([10, 20, 30])
print("Updated list:", random_list)

#Q3. Try to use a for loop to print each element in the list.

# Using a for loop to print each element in the list
for element in random_list:
    print(element)

"""## *`Topic : Dictionary Exercise`*"""

#Q1. Create a dictionary with keys 'name', 'age', and 'address' and values 'John', 25, and 'New York' respectively.

# Creating the dictionary
person_dict = {'name': 'John', 'age': 25, 'address': 'New York'}
print("Original dictionary:", person_dict)

#Q2. Add a new key-value pair to the dictionary created in Q1 with key 'phone' and value '1234567890'.

# Adding a new key-value pair to the dictionary
person_dict['phone'] = '1234567890'
print("Updated dictionary:", person_dict)

"""## *`Topic : Set Exercise`*"""

#Q1. Create a set with values 1, 2, 3, 4, and 5.

# Creating the set
num_set = {1, 2, 3, 4, 5}
print("Original set:", num_set)

#Q2. Add the value 6 to the set created in Q1.

# Adding value 6 to the set
num_set.add(6)
print("Set after adding 6:", num_set)

#Q3. Remove the value 3 from the set created in Q1.

# Removing value 3 from the set
num_set.discard(3)
print("Set after removing 3:", num_set)

"""## *`Topic : Tuple Exercise`*"""

#Q1. Create a tuple with values 1, 2, 3, and 4.

# Creating the tuple
num_tuple = (1, 2, 3, 4)
print("Tuple:", num_tuple)

#Q2. Print the length of the tuple created in Q1.

# Printing the length of the tuple
print("Length of the tuple:", len(num_tuple))